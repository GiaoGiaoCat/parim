// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        (unknown)
// source: MeituanRTA.proto

package meituanAdRta

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type RtaRequest_OperatingSystem int32

const (
	RtaRequest_OS_UNKNOWN RtaRequest_OperatingSystem = 0
	RtaRequest_OS_IOS     RtaRequest_OperatingSystem = 1
	RtaRequest_OS_ANDROID RtaRequest_OperatingSystem = 2
	RtaRequest_OS_WINDOWS RtaRequest_OperatingSystem = 3
	RtaRequest_OS_SYMBIAN RtaRequest_OperatingSystem = 4
	RtaRequest_OS_JAVA    RtaRequest_OperatingSystem = 5
)

// Enum value maps for RtaRequest_OperatingSystem.
var (
	RtaRequest_OperatingSystem_name = map[int32]string{
		0: "OS_UNKNOWN",
		1: "OS_IOS",
		2: "OS_ANDROID",
		3: "OS_WINDOWS",
		4: "OS_SYMBIAN",
		5: "OS_JAVA",
	}
	RtaRequest_OperatingSystem_value = map[string]int32{
		"OS_UNKNOWN": 0,
		"OS_IOS":     1,
		"OS_ANDROID": 2,
		"OS_WINDOWS": 3,
		"OS_SYMBIAN": 4,
		"OS_JAVA":    5,
	}
)

func (x RtaRequest_OperatingSystem) Enum() *RtaRequest_OperatingSystem {
	p := new(RtaRequest_OperatingSystem)
	*p = x
	return p
}

func (x RtaRequest_OperatingSystem) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RtaRequest_OperatingSystem) Descriptor() protoreflect.EnumDescriptor {
	return file_MeituanRTA_proto_enumTypes[0].Descriptor()
}

func (RtaRequest_OperatingSystem) Type() protoreflect.EnumType {
	return &file_MeituanRTA_proto_enumTypes[0]
}

func (x RtaRequest_OperatingSystem) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *RtaRequest_OperatingSystem) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = RtaRequest_OperatingSystem(num)
	return nil
}

// Deprecated: Use RtaRequest_OperatingSystem.Descriptor instead.
func (RtaRequest_OperatingSystem) EnumDescriptor() ([]byte, []int) {
	return file_MeituanRTA_proto_rawDescGZIP(), []int{0, 0}
}

type RtaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 请求唯一标识
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// true表示探测网络延迟
	IsPing *bool `protobuf:"varint,2,opt,name=is_ping,json=isPing" json:"is_ping,omitempty"`
	// true表示测试请求，广告不会被展示和计费
	IsTest *bool              `protobuf:"varint,3,opt,name=is_test,json=isTest" json:"is_test,omitempty"`
	Device *RtaRequest_Device `protobuf:"bytes,4,opt,name=device" json:"device,omitempty"`
	// 渠道标识
	SiteId *string `protobuf:"bytes,5,opt,name=site_id,json=siteId" json:"site_id,omitempty"`
}

func (x *RtaRequest) Reset() {
	*x = RtaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MeituanRTA_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RtaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RtaRequest) ProtoMessage() {}

func (x *RtaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MeituanRTA_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RtaRequest.ProtoReflect.Descriptor instead.
func (*RtaRequest) Descriptor() ([]byte, []int) {
	return file_MeituanRTA_proto_rawDescGZIP(), []int{0}
}

func (x *RtaRequest) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *RtaRequest) GetIsPing() bool {
	if x != nil && x.IsPing != nil {
		return *x.IsPing
	}
	return false
}

func (x *RtaRequest) GetIsTest() bool {
	if x != nil && x.IsTest != nil {
		return *x.IsTest
	}
	return false
}

func (x *RtaRequest) GetDevice() *RtaRequest_Device {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *RtaRequest) GetSiteId() string {
	if x != nil && x.SiteId != nil {
		return *x.SiteId
	}
	return ""
}

type RtaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 来自RtaRequest.id
	RequestId *string `protobuf:"bytes,1,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	// 返回的状态码，0为选择该流量，非0为过滤，该状态码落地日志，方便定位问题
	Code *uint32 `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	// 收到RtaRequest至发送完RtaResponse的用时，单位:毫秒
	ProcessingTimeMs *int32 `protobuf:"varint,3,opt,name=processing_time_ms,json=processingTimeMs" json:"processing_time_ms,omitempty"`
	// 指定策略id的广告主，当code为0选择该流量时，只选择包含该策略id的所有广告主
	PromotionTargetId []int64 `protobuf:"varint,4,rep,packed,name=promotion_target_id,json=promotionTargetId" json:"promotion_target_id,omitempty"`
}

func (x *RtaResponse) Reset() {
	*x = RtaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MeituanRTA_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RtaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RtaResponse) ProtoMessage() {}

func (x *RtaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MeituanRTA_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RtaResponse.ProtoReflect.Descriptor instead.
func (*RtaResponse) Descriptor() ([]byte, []int) {
	return file_MeituanRTA_proto_rawDescGZIP(), []int{1}
}

func (x *RtaResponse) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (x *RtaResponse) GetCode() uint32 {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return 0
}

func (x *RtaResponse) GetProcessingTimeMs() int32 {
	if x != nil && x.ProcessingTimeMs != nil {
		return *x.ProcessingTimeMs
	}
	return 0
}

func (x *RtaResponse) GetPromotionTargetId() []int64 {
	if x != nil {
		return x.PromotionTargetId
	}
	return nil
}

type RtaRequest_Device struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Os *RtaRequest_OperatingSystem `protobuf:"varint,1,opt,name=os,enum=meituanAdRta.RtaRequest_OperatingSystem" json:"os,omitempty"`
	// iOS设备的IDFA md5sum
	IdfaMd5Sum *string `protobuf:"bytes,2,opt,name=idfa_md5sum,json=idfaMd5sum" json:"idfa_md5sum,omitempty"`
	// Android设备的IMEI md5sum
	ImeiMd5Sum *string `protobuf:"bytes,3,opt,name=imei_md5sum,json=imeiMd5sum" json:"imei_md5sum,omitempty"`
	// Android设备的Android ID
	AndroidIdMd5Sum *string `protobuf:"bytes,4,opt,name=android_id_md5sum,json=androidIdMd5sum" json:"android_id_md5sum,omitempty"`
	// ott设备的mac地址
	MacMd5Sum *string `protobuf:"bytes,5,opt,name=mac_md5sum,json=macMd5sum" json:"mac_md5sum,omitempty"`
	// Android设备的oaid  md5sum
	OaidMd5Sum *string `protobuf:"bytes,6,opt,name=oaid_md5sum,json=oaidMd5sum" json:"oaid_md5sum,omitempty"`
	// 用户IPv4
	Ip *string `protobuf:"bytes,7,opt,name=ip" json:"ip,omitempty"`
	// oaid原值
	Oaid *string `protobuf:"bytes,8,opt,name=oaid" json:"oaid,omitempty"`
	// IPv6
	Ipv6 *string `protobuf:"bytes,9,opt,name=ipv6" json:"ipv6,omitempty"`
}

func (x *RtaRequest_Device) Reset() {
	*x = RtaRequest_Device{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MeituanRTA_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RtaRequest_Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RtaRequest_Device) ProtoMessage() {}

func (x *RtaRequest_Device) ProtoReflect() protoreflect.Message {
	mi := &file_MeituanRTA_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RtaRequest_Device.ProtoReflect.Descriptor instead.
func (*RtaRequest_Device) Descriptor() ([]byte, []int) {
	return file_MeituanRTA_proto_rawDescGZIP(), []int{0, 0}
}

func (x *RtaRequest_Device) GetOs() RtaRequest_OperatingSystem {
	if x != nil && x.Os != nil {
		return *x.Os
	}
	return RtaRequest_OS_UNKNOWN
}

func (x *RtaRequest_Device) GetIdfaMd5Sum() string {
	if x != nil && x.IdfaMd5Sum != nil {
		return *x.IdfaMd5Sum
	}
	return ""
}

func (x *RtaRequest_Device) GetImeiMd5Sum() string {
	if x != nil && x.ImeiMd5Sum != nil {
		return *x.ImeiMd5Sum
	}
	return ""
}

func (x *RtaRequest_Device) GetAndroidIdMd5Sum() string {
	if x != nil && x.AndroidIdMd5Sum != nil {
		return *x.AndroidIdMd5Sum
	}
	return ""
}

func (x *RtaRequest_Device) GetMacMd5Sum() string {
	if x != nil && x.MacMd5Sum != nil {
		return *x.MacMd5Sum
	}
	return ""
}

func (x *RtaRequest_Device) GetOaidMd5Sum() string {
	if x != nil && x.OaidMd5Sum != nil {
		return *x.OaidMd5Sum
	}
	return ""
}

func (x *RtaRequest_Device) GetIp() string {
	if x != nil && x.Ip != nil {
		return *x.Ip
	}
	return ""
}

func (x *RtaRequest_Device) GetOaid() string {
	if x != nil && x.Oaid != nil {
		return *x.Oaid
	}
	return ""
}

func (x *RtaRequest_Device) GetIpv6() string {
	if x != nil && x.Ipv6 != nil {
		return *x.Ipv6
	}
	return ""
}

var File_MeituanRTA_proto protoreflect.FileDescriptor

var file_MeituanRTA_proto_rawDesc = []byte{
	0x0a, 0x10, 0x4d, 0x65, 0x69, 0x74, 0x75, 0x61, 0x6e, 0x52, 0x54, 0x41, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0c, 0x6d, 0x65, 0x69, 0x74, 0x75, 0x61, 0x6e, 0x41, 0x64, 0x52, 0x74, 0x61,
	0x22, 0xbf, 0x03, 0x0a, 0x0a, 0x52, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0f, 0x0a, 0x07, 0x69,
	0x73, 0x5f, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x12, 0x0f, 0x0a, 0x07,
	0x69, 0x73, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x12, 0x2f, 0x0a,
	0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x6d, 0x65, 0x69, 0x74, 0x75, 0x61, 0x6e, 0x41, 0x64, 0x52, 0x74, 0x61, 0x2e, 0x52, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x0f,
	0x0a, 0x07, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x1a,
	0xd4, 0x01, 0x0a, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x02, 0x6f, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x6d, 0x65, 0x69, 0x74, 0x75, 0x61, 0x6e,
	0x41, 0x64, 0x52, 0x74, 0x61, 0x2e, 0x52, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x12, 0x13, 0x0a, 0x0b, 0x69, 0x64, 0x66, 0x61, 0x5f, 0x6d, 0x64, 0x35, 0x73, 0x75, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x12, 0x13, 0x0a, 0x0b, 0x69, 0x6d, 0x65, 0x69, 0x5f, 0x6d, 0x64,
	0x35, 0x73, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x12, 0x19, 0x0a, 0x11, 0x61, 0x6e,
	0x64, 0x72, 0x6f, 0x69, 0x64, 0x5f, 0x69, 0x64, 0x5f, 0x6d, 0x64, 0x35, 0x73, 0x75, 0x6d, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x12, 0x12, 0x0a, 0x0a, 0x6d, 0x61, 0x63, 0x5f, 0x6d, 0x64, 0x35,
	0x73, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x12, 0x13, 0x0a, 0x0b, 0x6f, 0x61, 0x69,
	0x64, 0x5f, 0x6d, 0x64, 0x35, 0x73, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0a,
	0x0a, 0x02, 0x69, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0c, 0x0a, 0x04, 0x6f, 0x61,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0c, 0x0a, 0x04, 0x69, 0x70, 0x76, 0x36,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x22, 0x6a, 0x0a, 0x0f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x0a, 0x4f, 0x53, 0x5f,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x53, 0x5f,
	0x49, 0x4f, 0x53, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x4f, 0x53, 0x5f, 0x41, 0x4e, 0x44, 0x52,
	0x4f, 0x49, 0x44, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x4f, 0x53, 0x5f, 0x57, 0x49, 0x4e, 0x44,
	0x4f, 0x57, 0x53, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x4f, 0x53, 0x5f, 0x53, 0x59, 0x4d, 0x42,
	0x49, 0x41, 0x4e, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x53, 0x5f, 0x4a, 0x41, 0x56, 0x41,
	0x10, 0x05, 0x22, 0x6c, 0x0a, 0x0b, 0x52, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0c, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x12, 0x1a, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e,
	0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12,
	0x1f, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x42, 0x02, 0x10, 0x01,
}

var (
	file_MeituanRTA_proto_rawDescOnce sync.Once
	file_MeituanRTA_proto_rawDescData = file_MeituanRTA_proto_rawDesc
)

func file_MeituanRTA_proto_rawDescGZIP() []byte {
	file_MeituanRTA_proto_rawDescOnce.Do(func() {
		file_MeituanRTA_proto_rawDescData = protoimpl.X.CompressGZIP(file_MeituanRTA_proto_rawDescData)
	})
	return file_MeituanRTA_proto_rawDescData
}

var file_MeituanRTA_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_MeituanRTA_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_MeituanRTA_proto_goTypes = []interface{}{
	(RtaRequest_OperatingSystem)(0), // 0: meituanAdRta.RtaRequest.OperatingSystem
	(*RtaRequest)(nil),              // 1: meituanAdRta.RtaRequest
	(*RtaResponse)(nil),             // 2: meituanAdRta.RtaResponse
	(*RtaRequest_Device)(nil),       // 3: meituanAdRta.RtaRequest.Device
}
var file_MeituanRTA_proto_depIdxs = []int32{
	3, // 0: meituanAdRta.RtaRequest.device:type_name -> meituanAdRta.RtaRequest.Device
	0, // 1: meituanAdRta.RtaRequest.Device.os:type_name -> meituanAdRta.RtaRequest.OperatingSystem
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_MeituanRTA_proto_init() }
func file_MeituanRTA_proto_init() {
	if File_MeituanRTA_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_MeituanRTA_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RtaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MeituanRTA_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RtaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MeituanRTA_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RtaRequest_Device); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_MeituanRTA_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_MeituanRTA_proto_goTypes,
		DependencyIndexes: file_MeituanRTA_proto_depIdxs,
		EnumInfos:         file_MeituanRTA_proto_enumTypes,
		MessageInfos:      file_MeituanRTA_proto_msgTypes,
	}.Build()
	File_MeituanRTA_proto = out.File
	file_MeituanRTA_proto_rawDesc = nil
	file_MeituanRTA_proto_goTypes = nil
	file_MeituanRTA_proto_depIdxs = nil
}
